---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import CTABox from '../../components/CTABox.astro';
import HeroBlog from '../../components/HeroBlog.astro';
import { formatDate, validateDate } from '../../utils/date';
import { calculateWordCount, estimateReadingTime } from '../../utils/wordCount';
import emailVerificationImg from '../../assets/images/blog/email-verification.webp';
import { posts } from '../../data/blog-posts';

// Get the post data from blog-posts.ts
const post = posts.find(p => p.slug === 'email-verification-dmarc');

const title = "Help! Emails I Send from Our Email Blast System are Showing Up as Unverified";
const description = "Learn how to fix unverified email issues and properly set up DMARC, DKIM, and SPF records for your business email system.";
const date = post?.date || validateDate("2024-07-29"); // Use the date from blog-posts.ts, fallback to hardcoded date
const author = "Huntertech Team";
const category = "IT Support";
const keywords = ["email verification", "DMARC", "DKIM", "SPF", "email security", "email deliverability", "business email"];

const wordCount = calculateWordCount(`
    Email security is a critical concern for businesses in today's digital landscape. This article explores how email verification and DMARC can protect your organization from email spoofing and improve deliverability.

    Understanding Email Verification
    Email verification is the process of confirming that an email address is valid and active. This process helps:

    1. Prevent Bounce Rates
    - Reduce invalid email addresses
    - Improve deliverability
    - Maintain sender reputation
    - Save resources

    2. Protect Against Spoofing
    - Verify sender identity
    - Prevent impersonation
    - Block malicious emails
    - Maintain trust

    3. Improve Security
    - Block spam
    - Prevent phishing
    - Stop malware
    - Protect data

    4. Enhance Compliance
    - Meet regulations
    - Maintain records
    - Follow best practices
    - Protect privacy

    The Role of DMARC
    DMARC (Domain-based Message Authentication, Reporting, and Conformance) is an email authentication protocol that helps protect your domain from unauthorized use. Key benefits include:

    1. Domain Protection
    - Prevent spoofing
    - Block phishing
    - Stop impersonation
    - Maintain trust

    2. Visibility
    - Monitor usage
    - Track abuse
    - Identify threats
    - Measure effectiveness

    3. Control
    - Set policies
    - Define actions
    - Manage exceptions
    - Enforce rules

    4. Reporting
    - Get insights
    - Track metrics
    - Monitor trends
    - Make decisions

    Implementing Email Verification
    To effectively implement email verification in your organization:

    1. Choose a Solution
    - Evaluate options
    - Compare features
    - Check compatibility
    - Consider costs

    2. Configure Settings
    - Set up verification
    - Define rules
    - Configure alerts
    - Test system

    3. Train Your Team
    - Explain process
    - Share best practices
    - Provide resources
    - Get feedback

    4. Monitor Results
    - Track metrics
    - Review reports
    - Make adjustments
    - Update policies

    Setting Up DMARC
    Follow these steps to implement DMARC:

    1. Prepare Your Domain
    - Check DNS records
    - Verify ownership
    - Review settings
    - Plan implementation

    2. Create Policy
    - Define rules
    - Set actions
    - Configure reporting
    - Test settings

    3. Deploy Gradually
    - Start monitoring
    - Increase enforcement
    - Monitor impact
    - Adjust as needed

    4. Maintain and Update
    - Review reports
    - Update policies
    - Monitor threats
    - Stay current

    Best Practices
    Follow these guidelines for effective email security:

    1. Regular Monitoring
    - Check reports
    - Review logs
    - Monitor threats
    - Update policies

    2. Policy Management
    - Review settings
    - Update rules
    - Adjust actions
    - Document changes

    3. Team Training
    - Provide education
    - Share updates
    - Get feedback
    - Improve processes

    4. Incident Response
    - Define procedures
    - Train team
    - Test scenarios
    - Update plans

    Conclusion
    Email verification and DMARC are essential tools for protecting your business from email-based threats. By implementing these solutions and following best practices, you can significantly improve your organization's email security.

    Remember: Email security is not a one-time setup - it requires ongoing monitoring and maintenance to be effective.
`);

const readingTime = estimateReadingTime(wordCount);

const structuredData = {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": title,
    "description": description,
    "image": {
        "@type": "ImageObject",
        "url": `https://huntertech.ca${emailVerificationImg.src}`,
        "width": "1200",
        "height": "630"
    },
    "author": {
        "@type": "Person",
        "name": author,
        "url": "https://huntertech.ca"
    },
    "publisher": {
        "@type": "Organization",
        "name": "Huntertech",
        "logo": {
            "@type": "ImageObject",
            "url": "https://huntertech.ca/images/huntertech-logo.png",
            "width": "600",
            "height": "60"
        }
    },
    "datePublished": date,
    "dateModified": date,
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://huntertech.ca/blog/email-verification-dmarc/"
    },
    "keywords": keywords,
    "articleSection": category,
    "inLanguage": "en-CA",
    "wordCount": wordCount.toString(),
    "isAccessibleForFree": true,
    "license": "https://creativecommons.org/licenses/by-nc-nd/4.0/",
    "timeRequired": `PT${readingTime}M`,
    "about": {
        "@type": "Thing",
        "name": "Email Security",
        "description": "Guide to implementing email verification and DMARC for business protection"
    },
    "mentions": [
        {
            "@type": "Thing",
            "name": "DMARC",
            "description": "Email authentication protocol for domain protection"
        },
        {
            "@type": "Thing",
            "name": "Email Verification",
            "description": "Process of confirming email address validity and security"
        },
        {
            "@type": "Thing",
            "name": "Business Security",
            "description": "Protection of business communications and data"
        }
    ]
};
---

<Layout 
    title={title} 
    description={description}
    keywords={keywords}
    type="article"
    image={emailVerificationImg.src}
    structuredData={structuredData}
>
    <Header />
    <main class="blog-post">
        <HeroBlog 
            title={title}
            subtitle={`By ${author} | ${formatDate(date)} | ${readingTime} min read`}
            backgroundImage={emailVerificationImg}
            backgroundImageAlt="Email Verification and DMARC"
        />

        <div class="container">
            <article class="content">
                <div class="article-meta">
                    <span class="category">{category}</span>
                    <time datetime={date}>{formatDate(date)}</time>
                    <span class="reading-time">{readingTime} min read</span>
                </div>

                <p>I've been seeing a common issue faced by many companies. They send emails through a bulk email provider like Mailchimp, Ticketmaster, Brevo, Hubspot, etc. and their emails are getting flagged as possible spam or as unverified.</p>

                <h2>Understanding the Problem</h2>
                <p>Let's break this down to show what's happening. When a company sends email using their Mailchimp Account, it should be legitimate, right? Let's check the mail header to understand what's going wrong.</p>

                <blockquote>
                    Authentication-Results: spf=pass (sender IP is 198.2.144.59) smtp.mailfrom=mail59.atl301.rsgsv.net; dkim=pass (signature was verified) header.d=mailchimpapp.net; dmarc=fail action=none header.from=deploydepot.ca; compauth=fail reason=001
                </blockquote>

                <p>Pulling out the important info:</p>
                <ul>
                    <li>SPF Passed</li>
                    <li>DKIM Passed</li>
                    <li>DMARC Failed</li>
                    <li>Fail reason = 001</li>
                </ul>

                <h2>What is DMARC, DKIM, and SPF?</h2>
                <p>DMARC (Domain-based Message Authentication, Reporting, and Conformance) builds upon SPF (Sender Policy Framework) and DKIM (DomainKeys Identified Mail). Its goal is to increase email security. Here's how it works:</p>

                <h3>Authentication Standards</h3>
                <ul>
                    <li><strong>SPF</strong>: Checks if the sender's IP address is authorized to send emails on behalf of a domain. It specifies which servers are allowed to send mail for a domain.</li>
                    <li><strong>DKIM</strong>: Adds a digital signature to outgoing emails. The recipient's server can verify this signature to ensure the email hasn't been tampered with.</li>
                </ul>

                <h3>DMARC Implementation</h3>
                <ul>
                    <li>DMARC allows domain owners to set policies for handling emails that fail authentication checks.</li>
                    <li>An organization can publish a DMARC policy that says, "If you send mail from my domain, it must pass SPF and DKIM checks."</li>
                    <li>DMARC creates a feedback loop between the sender and receiver. If an email fails authentication, the receiver can send a report back to the sender, detailing why it failed.</li>
                </ul>

                <h2>How to Fix the Issue</h2>
                <p>In the Mailchimp example, the CNAME record you create is actually pointing at their TXT record which holds the public key used to verify the DKIM signature applied by the Mailchimp mail server.</p>

                <p>A proper TXT record should be formatted like this:</p>
                <pre>[selector]._domainkey.[domain]</pre>

                <p>With a value of:</p>
                <pre>v=DKIM1; p=[insert public key here]</pre>

                <h3>Step 1: Find the Selector</h3>
                <p>In your email, you need to open the message details or header (in Outlook you can right-click -> View -> Message Details). Scroll to the DKIM-Signature section of the header and take note of these important items:</p>
                <ul>
                    <li>d= is the Domain (e.g., mailchimpapp.net)</li>
                    <li>s= is the Selector (e.g., k3)</li>
                    <li>v= is the version</li>
                    <li>a= is the algorithm used to apply the DKIM signature</li>
                </ul>

                <h3>Step 2: Create the DNS Records</h3>
                <p>Head over to www.mxtoolbox.com and use their Super Tool. Select the DKIM Lookup from the dropdown and enter the d value and s value separated by a colon (:) - example: mailchimpapp.net:k3</p>

                <p>This will show you the DKIM record for your email provider. When you create your CNAME record, this is what you are pointing to. This has the public key used to verify the DKIM signature.</p>

                <h2>Setting Up DMARC Records</h2>
                <p>The last piece of the puzzle is setting up your DMARC records. You should create a mailbox or distribution list to collect DMARC reports and set your DNS DMARC to reject or quarantine emails that don't pass DMARC. Or you can use a service like <a href="https://www.uriports.com" target="_blank">https://www.uriports.com</a> to collect the reports for you.</p>

                <p>Example DMARC TXT DNS record:</p>
                <pre>v=DMARC1; p=quarantine; adkim=s; aspf=s; rua=mailto:dmarcfailure@yourdomain.ca</pre>

                <p>What this means:</p>
                <ul>
                    <li><strong>v=DMARC1</strong>: Indicates this is a DMARC policy</li>
                    <li><strong>p=quarantine</strong>: Email servers should "quarantine" emails that fail DKIM and SPF</li>
                    <li><strong>adkim=s</strong>: DKIM checks are "strict"</li>
                    <li><strong>aspf=s</strong>: SPF checks are "strict"</li>
                    <li><strong>rua=mailto:xxxx</strong>: Sends DMARC reports to this email address</li>
                </ul>

                <CTABox 
                    title="Need Help with Email Authentication?"
                    description="Contact our team for expert assistance with email verification and DMARC setup for your business."
                    buttonText="Get Expert Help"
                    buttonLink="/contact/?form_conversion=email-verification-dmarc-blog-cta"
                />
            </article>
        </div>
    </main>
    <Footer />
</Layout>

<style>
    .blog-post {
        background: var(--bg-color);
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 20px 60px;
    }

    .content {
        line-height: 1.8;
        color: var(--text-color);
    }

    .article-meta {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
        color: var(--text-muted);
        font-size: 0.9rem;
    }

    .category {
        background: var(--button-color);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: var(--radius-sm);
        font-size: 0.8rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .content h2 {
        color: var(--text-color);
        margin: 2.5rem 0 1.5rem;
        font-size: 1.8em;
        font-weight: 700;
    }

    .content h3 {
        color: var(--text-color);
        margin: 2rem 0 1rem;
        font-size: 1.4em;
        font-weight: 600;
    }

    .content p {
        margin-bottom: 1.5rem;
        font-size: 1.1rem;
    }

    .content ul, .content ol {
        margin-bottom: 1.5rem;
        padding-left: 1.5rem;
    }

    .content li {
        margin-bottom: 0.75rem;
        font-size: 1.1rem;
    }

    .content blockquote {
        background: var(--secondary-bg);
        padding: 1.5rem;
        border-left: 4px solid var(--button-color);
        margin: 1.5rem 0;
        font-family: monospace;
        overflow-x: auto;
        font-size: 0.9rem;
        line-height: 1.6;
    }

    .content pre {
        background: var(--secondary-bg);
        padding: 1.5rem;
        border-radius: var(--radius-md);
        overflow-x: auto;
        font-family: monospace;
        margin: 1.5rem 0;
        font-size: 0.9rem;
        line-height: 1.6;
    }

    .content a {
        color: var(--button-color);
        text-decoration: none;
        border-bottom: 1px solid transparent;
        transition: border-color 0.2s ease;
    }

    .content a:hover {
        border-bottom-color: var(--button-color);
    }

    @media (max-width: 768px) {
        .container {
            padding: 0 15px 40px;
        }

        .content h2 {
            font-size: 1.6em;
        }

        .content h3 {
            font-size: 1.3em;
        }

        .content p, .content li {
            font-size: 1rem;
        }
    }
</style> 