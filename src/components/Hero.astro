---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import ArrowRight from './icons/arrow-right.astro';

interface Props {
  title: string;
  subtitle: string;
  backgroundImage: string | ImageMetadata;
  backgroundImageAlt: string;
  ctaText: string;
  ctaLink: string;
  secondaryCtaText?: string;
  secondaryCtaLink?: string;
}

const { 
  title, 
  subtitle, 
  backgroundImage, 
  backgroundImageAlt,
  ctaText, 
  ctaLink,
  secondaryCtaText,
  secondaryCtaLink
} = Astro.props;

const imageSrc = typeof backgroundImage === 'string' ? backgroundImage : backgroundImage.src;
---

<section class="hero">
  <div class="hero-image-container">
    <img 
      src={imageSrc} 
      alt={backgroundImageAlt}
      class="hero-image"
      width="1920"
      height="1080"
      loading="eager"
      decoding="sync"
      fetchpriority="high"
    />
    <div class="hero-overlay"></div>
  </div>
  <div class="hero-content">
    <h1 class="hero-title">{title}</h1>
    <p class="hero-subtitle">{subtitle}</p>
    <div class="hero-cta">
      <a href={ctaLink} class="btn btn-primary">
        {ctaText}
        <ArrowRight color="var(--white)" />
      </a>
      {secondaryCtaText && secondaryCtaLink && (
        <a href={secondaryCtaLink} class="btn btn-secondary white-text">
          {secondaryCtaText}
          <ArrowRight color="var(--white)" />
        </a>
      )}
    </div>
  </div>
</section>

<style>
  .hero {
    position: relative;
    height: 100vh;
    min-height: 600px;
    max-height: 800px;
    width: 100%;
    overflow: hidden;
    contain: layout paint;
  }

  .hero-image-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    will-change: transform;
  }

  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    will-change: transform;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, rgba(28, 40, 51, 0.95), rgba(41, 128, 185, 0.9));
    will-change: opacity;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    color: white;
    text-align: left;
    will-change: transform;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    max-width: 800px;
  }

  .hero-subtitle {
    font-size: clamp(1.25rem, 2vw, 1.5rem);
    line-height: 1.5;
    margin-bottom: 2rem;
    max-width: 600px;
  }

  .hero-cta {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
    padding: 1.25rem 2.5rem;
    font-size: 1.2rem;
    font-weight: 600;
    border-radius: var(--radius-md);
    transition: all var(--transition-normal);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    text-decoration: none;
  }

  .btn svg {
    transition: transform var(--transition-normal);
  }

  .btn:hover svg {
    transform: translateX(5px);
  }

  .btn-primary {
    background-color: var(--button-color);
    color: var(--white);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .btn-primary:hover {
    background-color: var(--button-hover);
    transform: translateY(-2px);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);
  }

  .btn-secondary {
    background-color: rgba(255, 255, 255, 0.1);
    border: 2px solid var(--white);
    color: var(--white);
    backdrop-filter: blur(10px);
  }

  .btn-secondary:hover {
    background-color: var(--white);
    color: var(--button-color);
    transform: translateY(-2px);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);
  }

  .btn-secondary:hover svg {
    color: var(--button-color);
  }

  .white-text {
    color: var(--white) !important;
  }

  @media (max-width: 768px) {
    .hero {
      min-height: 500px;
    }

    .hero-content {
      padding: 0 1rem;
    }

    .hero-cta {
      flex-direction: column;
      width: 100%;
    }

    .btn {
      width: 100%;
      justify-content: center;
      padding: 1rem 2rem;
      font-size: 1.1rem;
    }
  }
</style> 